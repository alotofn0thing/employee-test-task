{"version":3,"sources":["modules/Alphabet/const.js","modules/Alphabet/EmployeeActions.js","modules/Birthdays/const.js","modules/Birthdays/birthdaysActions.js","modules/Alphabet/index.js","modules/Birthdays/index.js","App.js","reportWebVitals.js","modules/Alphabet/EmployeeReducer.js","modules/Birthdays/birthdaysReducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["GET_EMPLOYEE_REQUEST","GET_EMPLOYEE_SUCCESS","GET_EMPLOYEE_FAILURE","success","employeeData","type","payload","ADD_EMPLOYEE_BIRTHDAY","DELETE_EMPLOYEE_BIRTHDAY","addEmployeeAC","dispatch","addEmployeeA","deleteEmployeeAC","deleteEmployeeA","Alphabet","useDispatch","useEffect","a","axios","get","data","employees","useSelector","state","employee","birthdays","letters","split","employeeBirthday","name","filter","person","firstName","lastName","getChecked","id","length","sortedArray","map","letter","letterWords","i","toUpperCase","push","sort","letterWordsSorted","index","className","htmlFor","onChange","checked","Birthdays","monthTable","j","monthOfBirthday","Date","dob","getMonth","getBirthdays","birthday","birthdayList","day","dateOfBirthday","toDateString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","handlers","employeeReducer","action","handle","DEFAULT","birthdaysState","localStorage","getItem","JSON","parse","setItem","stringify","birthdaysReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,uBCO9BC,EAAU,SAACC,GAAD,MAAmB,CACjCC,KAAMJ,EACNK,QAAS,CAAEF,kBCXAG,EAAwB,wBACxBC,EAA2B,2BCY3BC,EAAgB,SAACL,GAAD,OAAkB,SAACM,GAC9CA,EAXmB,SAACN,GAAD,MAAmB,CACtCC,KAAME,EACND,QAAS,CAAEF,iBASFO,CAAaP,MAGXQ,EAAmB,SAACR,GAAD,OAAkB,SAACM,GACjDA,EAVsB,SAACN,GAAD,MAAmB,CACzCC,KAAMG,EACNF,QAAS,CAAEF,iBAQFS,CAAgBT,M,eCsEZU,EAhFE,WAEb,IAAMJ,EAAWK,cAEjBC,qBAAU,WACNN,EHGwB,uCAAM,WAAOA,GAAP,iBAAAO,EAAA,6DACpCP,EAVqB,CAAEL,KAAML,IASO,kBAGGkB,IAAMC,IAAI,kEAHb,gBAGpBf,EAHoB,EAG1BgB,KACRV,EAASP,EAAQC,IAJiB,gDAMlCM,EARmB,CAAEL,KAAMH,IAEO,yDAAN,yDGFzB,IAEH,IAAMmB,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASpB,gBAClDqB,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAME,UAAUJ,aAEnDK,EAAU,6BAA6BC,MAAM,IAE7CC,EAAmB,SAACC,GAAD,OAAUR,EAAUS,QAAO,SAAAC,GAAM,OAAKA,EAAOC,UAAY,IAAMD,EAAOE,WAAcJ,KAAM,IAC7GK,EAAa,SAACC,GAEhB,OADsE,IAA1DV,EAAUK,QAAO,SAAAC,GAAM,OAAIA,EAAOI,KAAOA,KAAIC,QAIvDC,EAAcX,EAAQY,KAAI,SAAAC,GAE5B,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIpB,EAAUe,OAAQK,IAC/BpB,EAAUoB,GAAGT,UAAU,KAAOO,EAAOG,eACpCF,EAAYG,KAAKtB,EAAUoB,GAAGT,UAAY,IAAMX,EAAUoB,GAAGR,UAGrEO,EAAYI,OACZ,IAAMC,EAAoBL,EAAYF,KAAI,SAACT,EAAMiB,GAC7C,OACI,sBAAKC,UAAU,wBAAf,UACI,mBACIA,UAAS,UACLb,EAAWN,EAAiBC,GAAMM,IAAM,cAAgB,IAFhE,SAKKN,IAEL,uBAAOmB,QAAO,gBAAWF,EAAQP,GAAjC,oBACA,uBAAOU,SAAU,WACbvC,EAASD,EAAcmB,EAAiBC,MAExCM,GAAE,gBAAWW,EAAQP,GACrBV,KAAI,kBAAaiB,EAAQP,GACzBlC,KAAK,QACL6C,QAAShB,EAAWN,EAAiBC,GAAMM,MAE/C,uBAAOa,QAAO,oBAAeF,EAAQP,GAArC,wBACA,uBAAOU,SAAU,WACbvC,EAASE,EAAiBiB,KAE1BM,GAAE,oBAAeW,EAAQP,GACzBV,KAAI,kBAAaiB,EAAQP,GACzBlC,KAAK,QACL6C,SAAShB,EAAWN,EAAiBC,GAAMM,YAK3D,OACI,sBAAKY,UAAU,kBAAf,UACI,6BAAKR,EAAOG,gBACkB,IAA7BG,EAAkBT,OACnB,8CAEKS,QAMjB,OACI,sBAAKE,UAAU,SAAf,UACJ,2CACF,qBAAKA,UAAU,WAAf,SACGV,QCbUc,G,MA/DG,WAkBd,IAjBA,IAAM1B,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAME,UAAUJ,aAEnD+B,EAAa,CACf,CAAC,GAAI,WAAY,IACjB,CAAC,GAAI,WAAY,IACjB,CAAC,EAAG,UAAW,IACf,CAAC,EAAG,WAAY,IAChB,CAAC,EAAG,QAAS,IACb,CAAC,EAAG,QAAS,IACb,CAAC,EAAG,MAAO,IACX,CAAC,EAAG,OAAQ,IACZ,CAAC,EAAG,OAAQ,IACZ,CAAC,EAAG,SAAU,IACd,CAAC,EAAG,YAAa,IACjB,CAAC,GAAI,UAAW,KAGVC,EAAI,EAAGA,EAAI5B,EAAUW,OAAQiB,IAEnC,IADA,IAAIC,EAAkB,IAAIC,KAAK9B,EAAU4B,GAAGG,KAAKC,WAAa,EACrDhB,EAAI,EAAGA,EAAIW,EAAWhB,OAAQK,IAC/BW,EAAWX,GAAG,KAAOa,GACrBF,EAAWX,GAAG,GAAGE,KAAKlB,EAAU4B,IAK5C,IAAIK,EAAeN,EAAWd,KAAI,SAAAqB,GAC9B,IAAIC,EAAgBD,EAAS,GAAGrB,KAAI,SAAAuB,GAChC,IAAIC,EAAiB,IAAIP,KAAKM,EAAIL,KAAKO,eACvC,OAAO,8BAAIF,EAAI7B,UAAY,IAAM6B,EAAI5B,SAA9B,MAA2C6B,QAMtD,OAJ4B,IAAxBF,EAAaxB,SACbwB,EAAe,8CAIf,gCACI,6BAAKD,EAAS,KACd,8BACKC,UAWjB,OALyB,IAArBnC,EAAUW,SACVsB,EAAe,0DAKf,sBAAKX,UAAU,WAAf,UACI,oDAGA,qBAAKA,UAAU,gBAAf,SACCW,SClDEM,G,MATH,WACV,OACE,sBAAKjB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SCISkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qCCDNQ,EAAe,CACnBtE,aAAc,GACduE,SAAS,GAQLC,GAAQ,mBACX5E,GAAuB,SAACuB,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBoD,SAAS,OAD7C,cAEX1E,GAAuB,SACtBsB,EADsB,OAETnB,EAFS,EAEpBE,QAAWF,aAFS,mBAAC,eAIpBmB,GAJmB,IAKtBnB,eACAuE,SAAS,OARC,cAUXzE,GAAuB,SAACqB,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBoD,SAAS,OAV7C,yBAWH,SAACpD,GAAD,OAAWA,KAXR,GAmBCsD,EALS,WAAmC,IAAlCtD,EAAiC,uDAAzBmD,EAAcI,EAAW,uCAClDC,EAASH,EAASE,EAAOzE,OAASuE,EAASI,QACjD,OAAOD,EAAOxD,EAAOuD,I,QC9BnBJ,EAAe,WACnB,IAAMO,EAAiBC,aAAaC,QAAQ,aAC5C,OAAsB,MAAlBF,EACK,CACL5D,UAAW,IAGN+D,KAAKC,MAAMJ,IAShBL,GAAQ,mBACXrE,GAAwB,SAACgB,EAAD,GAA2C,IAAtBnB,EAAqB,EAAhCE,QAAWF,aAQ5C,OAPA8E,aAAaI,QACX,YACAF,KAAKG,UAAL,2BACKhE,GADL,IAEEF,UAAU,GAAD,mBAAME,EAAMF,WAAZ,CAAuBjB,QAG7B,2BACFmB,GADL,IAEEF,UAAU,GAAD,mBAAME,EAAMF,WAAZ,CAAuBjB,SAXxB,cAcXI,GAA2B,SAACe,EAAD,GAA2C,IAAtBnB,EAAqB,EAAhCE,QAAWF,aAW/C,OAVA8E,aAAaI,QACX,YACAF,KAAKG,UAAL,2BACKhE,GADL,IAEEF,UAAWE,EAAMF,UAAUS,QACzB,SAACN,GAAD,OACEA,EAASQ,UAAY,IAAMR,EAASS,WAAa7B,SAIlD,2BACFmB,GADL,IAEEF,UAAWE,EAAMF,UAAUS,QACzB,SAACN,GAAD,OACEA,EAASQ,UAAY,IAAMR,EAASS,WAAa7B,UA7B7C,yBAiCH,SAACmB,GAAD,OAAWA,KAjCR,GAyCCiE,EALU,WAAqC,IAApCjE,EAAmC,uDAA3BmD,IAAgBI,EAAW,uCACrDC,EAASH,EAASE,EAAOzE,OAASuE,EAASI,QACjD,OAAOD,EAAOxD,EAAOuD,IC1CRW,EALKC,0BAAgB,CAChClE,SAAUqD,EACVpD,UAAW+D,ICCAG,EAFDC,sBAAYH,EAAaI,8BAAoBC,0BAAgBC,O,QCA3EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAM1BnC,M","file":"static/js/main.22beca9f.chunk.js","sourcesContent":["export const GET_EMPLOYEE_REQUEST = \"GET_EMPLOYEE_REQUEST\";\r\nexport const GET_EMPLOYEE_SUCCESS = \"GET_EMPLOYEE_SUCCESS\";\r\nexport const GET_EMPLOYEE_FAILURE = \"GET_EMPLOYEE_FAILURE\";","import axios from 'axios';\r\nimport {\r\n  GET_EMPLOYEE_REQUEST,\r\n  GET_EMPLOYEE_SUCCESS,\r\n  GET_EMPLOYEE_FAILURE,\r\n} from \"./const\";\r\n\r\nconst request = () => ({ type: GET_EMPLOYEE_REQUEST });\r\n\r\nconst success = (employeeData) => ({\r\n  type: GET_EMPLOYEE_SUCCESS,\r\n  payload: { employeeData },\r\n});\r\n\r\nconst failure = () => ({ type: GET_EMPLOYEE_FAILURE });\r\n\r\nexport const receiveEmployees = () => async (dispatch) => {\r\n  dispatch(request());\r\n  try {\r\n    const { data: employeeData } = await axios.get('https://yalantis-react-school-api.yalantis.com/api/task0/users');\r\n    dispatch(success(employeeData));\r\n  } catch (e) {\r\n    dispatch(failure());\r\n  }\r\n};","export const ADD_EMPLOYEE_BIRTHDAY = 'ADD_EMPLOYEE_BIRTHDAY';\r\nexport const DELETE_EMPLOYEE_BIRTHDAY = 'DELETE_EMPLOYEE_BIRTHDAY';","import axios from \"axios\";\r\nimport { ADD_EMPLOYEE_BIRTHDAY, DELETE_EMPLOYEE_BIRTHDAY } from \"./const\";\r\n\r\nconst addEmployeeA = (employeeData) => ({\r\n  type: ADD_EMPLOYEE_BIRTHDAY,\r\n  payload: { employeeData },\r\n});\r\n\r\nconst deleteEmployeeA = (employeeData) => ({\r\n  type: DELETE_EMPLOYEE_BIRTHDAY,\r\n  payload: { employeeData },\r\n});\r\n\r\nexport const addEmployeeAC = (employeeData) => (dispatch) => {\r\n  dispatch(addEmployeeA(employeeData));\r\n};\r\n\r\nexport const deleteEmployeeAC = (employeeData) => (dispatch) => {\r\n  dispatch(deleteEmployeeA(employeeData));\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {receiveEmployees} from './EmployeeActions';\r\nimport {addEmployeeAC} from '../Birthdays/birthdaysActions';\r\nimport {deleteEmployeeAC} from '../Birthdays/birthdaysActions';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Alphabet = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(receiveEmployees())\r\n    }, [])\r\n    \r\n    const employees = useSelector((state) => state.employee.employeeData);\r\n    const birthdays = useSelector((state) => state.birthdays.employees);\r\n\r\n    const letters = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\r\n\r\n    const employeeBirthday = (name) => employees.filter(person => (person.firstName + ' ' + person.lastName) === name)[0]; \r\n    const getChecked = (id) => {\r\n        let check = birthdays.filter(person => person.id === id).length  ===  0 ? false : true;\r\n        return check;\r\n      }\r\n\r\n    const sortedArray = letters.map(letter => {\r\n        let letterWords = [];\r\n        for (let i = 0; i < employees.length; i++) {\r\n            if(employees[i].firstName[0] === letter.toUpperCase()) {\r\n                letterWords.push(employees[i].firstName + ' ' + employees[i].lastName)\r\n            }\r\n        }\r\n        letterWords.sort();\r\n        const letterWordsSorted = letterWords.map((name, index) => {\r\n            return (\r\n                <div className=\"employee-letter-radio\">\r\n                    <p\r\n                        className={`${\r\n                            getChecked(employeeBirthday(name).id) ? \"active-name\" : \"\"\r\n                        }`}\r\n                    >\r\n                        {name}\r\n                    </p>\r\n                    <label htmlFor={`active${index + letter}`}>Active</label>\r\n                    <input onChange={()=> {                        \r\n                        dispatch(addEmployeeAC(employeeBirthday(name)))\r\n                        }} \r\n                        id={`active${index + letter}`}\r\n                        name={`birthday${index + letter}`}\r\n                        type=\"radio\"\r\n                        checked={getChecked(employeeBirthday(name).id)}\r\n                        />\r\n                    <label htmlFor={`not-active${index + letter}`}>Not Active</label>\r\n                    <input onChange={()=> {                       \r\n                        dispatch(deleteEmployeeAC(name))\r\n                        }} \r\n                        id={`not-active${index + letter}`}\r\n                        name={`birthday${index + letter}`}\r\n                        type=\"radio\"\r\n                        checked={getChecked(employeeBirthday(name).id) ? false : true}\r\n                        />  \r\n                </div>\r\n            )\r\n         });\r\n        return(\r\n            <div className=\"employee-letter\">\r\n                <h3>{letter.toUpperCase()}</h3>\r\n                {letterWordsSorted.length === 0 ? (\r\n                <h4>No Employees</h4>\r\n                 ) : (\r\n                     letterWordsSorted\r\n                 )}\r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div className=\"header\">\r\n    <h2>Employees</h2>\r\n  <div className=\"employee\">\r\n    {sortedArray}\r\n    </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Alphabet;","import { useEffect } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Birthdays = () => {\r\n    const birthdays = useSelector((state) => state.birthdays.employees);\r\n\r\n    const monthTable = [\r\n        [11, \"November\", []], \r\n        [12, \"December\", []], \r\n        [1, \"January\", []], \r\n        [2, \"February\", []], \r\n        [3, \"March\", []], \r\n        [4, \"April\", []], \r\n        [5, \"May\", []], \r\n        [6, \"June\", []], \r\n        [7, \"July\", []], \r\n        [8, \"August\", []], \r\n        [9, \"September\", []],\r\n        [10, \"October\", []]\r\n    ];\r\n    \r\n    for ( let j = 0; j < birthdays.length; j++) {\r\n        let monthOfBirthday = new Date(birthdays[j].dob).getMonth() + 1;\r\n        for (let i = 0; i < monthTable.length; i++) {\r\n            if (monthTable[i][0] === monthOfBirthday) {\r\n                monthTable[i][2].push(birthdays[j]);\r\n            };\r\n        };\r\n    };\r\n\r\n    let getBirthdays = monthTable.map(birthday => {\r\n        let birthdayList =  birthday[2].map(day => {\r\n            let dateOfBirthday = new Date(day.dob).toDateString();\r\n            return <p>{day.firstName + ' ' + day.lastName} - {dateOfBirthday}</p>\r\n        });\r\n        if (birthdayList.length === 0) {\r\n            birthdayList = <p>No Employees</p>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3>{birthday[1]}</h3>\r\n                <div>\r\n                    {birthdayList}\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    if (birthdays.length === 0) {\r\n        getBirthdays = <p> Employees List is empty</p>\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"birthday\">\r\n            <h2>\r\n            Employees birthday\r\n            </h2>\r\n            <div className=\"birthday-list\">\r\n            {getBirthdays}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Birthdays;","import Alphabet from './modules/Alphabet';\nimport Birthdays from './modules/Birthdays';\nimport './App.scss';\n\nconst App = ()  => {\n  return (\n    <div className=\"page\">\n      <Alphabet />\n      <Birthdays/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    GET_EMPLOYEE_REQUEST,\r\n    GET_EMPLOYEE_SUCCESS,\r\n    GET_EMPLOYEE_FAILURE,\r\n  } from \"./const\";\r\n  \r\n  const initialState = {\r\n    employeeData: [],\r\n    loading: false\r\n  };\r\n  \r\n  /**\r\n   * @desc Handlers of payment reducer for changin sign in state.\r\n   * @const\r\n   * @type {object}\r\n   */\r\n  const handlers = {\r\n    [GET_EMPLOYEE_REQUEST]: (state) => ({ ...state, loading: true }),\r\n    [GET_EMPLOYEE_SUCCESS]: (\r\n      state,\r\n      { payload: { employeeData } }\r\n    ) => ({\r\n      ...state,\r\n      employeeData,\r\n      loading: false,\r\n    }),\r\n    [GET_EMPLOYEE_FAILURE]: (state) => ({ ...state, loading: false }),\r\n    DEFAULT: (state) => state,\r\n  };\r\n  \r\n  const employeeReducer = (state = initialState, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT;\r\n    return handle(state, action);\r\n  };\r\n  \r\n  export default employeeReducer;","import { ADD_EMPLOYEE_BIRTHDAY, DELETE_EMPLOYEE_BIRTHDAY } from \"./const\";\r\n\r\nconst initialState = () => {\r\n  const birthdaysState = localStorage.getItem(\"birthdays\");\r\n  if (birthdaysState == null) {\r\n    return {\r\n      employees: [],\r\n    };\r\n  } else {\r\n    return JSON.parse(birthdaysState);\r\n  }\r\n};\r\n\r\n/**\r\n * @desc Handlers of payment reducer for changin sign in state.\r\n * @const\r\n * @type {object}\r\n */\r\nconst handlers = {\r\n  [ADD_EMPLOYEE_BIRTHDAY]: (state, { payload: { employeeData } }) => {\r\n    localStorage.setItem(\r\n      \"birthdays\",\r\n      JSON.stringify({\r\n        ...state,\r\n        employees: [...state.employees, employeeData],\r\n      })\r\n    );\r\n    return {\r\n      ...state,\r\n      employees: [...state.employees, employeeData],\r\n    };\r\n  },\r\n  [DELETE_EMPLOYEE_BIRTHDAY]: (state, { payload: { employeeData } }) => {\r\n    localStorage.setItem(\r\n      \"birthdays\",\r\n      JSON.stringify({\r\n        ...state,\r\n        employees: state.employees.filter(\r\n          (employee) =>\r\n            employee.firstName + \" \" + employee.lastName !== employeeData\r\n        ),\r\n      })\r\n    );\r\n    return {\r\n      ...state,\r\n      employees: state.employees.filter(\r\n        (employee) =>\r\n          employee.firstName + \" \" + employee.lastName !== employeeData\r\n      ),\r\n    };\r\n  },\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nconst birthdaysReducer = (state = initialState(), action) => {\r\n  const handle = handlers[action.type] || handlers.DEFAULT;\r\n  return handle(state, action);\r\n};\r\n\r\nexport default birthdaysReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport employeeReducer from '../modules/Alphabet/EmployeeReducer';\r\nimport birthdaysReducer from \"../modules/Birthdays/birthdaysReducer\";\r\n\r\n/**\r\n * @desc Reducer function that invokes every reducer inside the passed object.\r\n * @const\r\n * @type {object}\r\n */\r\nconst rootReducer = combineReducers({\r\n    employee: employeeReducer,\r\n    birthdays: birthdaysReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducer';\r\n\r\n/**\r\n * @desc Store that lets you read state, dispatch actions, and subscribe to changes.\r\n * @const\r\n * @type {object}\r\n */\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}